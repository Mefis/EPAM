namespace Task03
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using System.Threading.Tasks;

    // Задание 3
    // На базе обычного массива(коллекции.NET не использовать) реализовать свой собственный класс DynamicArray, представляющий собой массив с запасом.
    // Класс должен содержать: 
    // 1. Конструктор без параметров(создается массив емкостью 8 элементов). 
    // 2. Конструктор с 1 целочисленным параметром(создается массив заданной емкости). 
    // 3. Конструктор, который в качестве параметра принимает коллекцию, реализующую  интерфейс IEnumerable, создает  массив нужного размера и копирует в него все элементы из коллекции.
    // 4. Метод  Add,  добавляющий в конец массива один элемент. При нехватке места для добавления элемента емкость массива должна расширяться в 2 раза.
    // 5. Метод AddRange, добавляющий в конец массива содержимое коллекции, реализующей интерфейс IEnumerable. Обратите внимание, метод должен корректно учитывать число элементов в
    // коллекции с тем, чтобы при необходимости расширения массива делать это только один раз вне зависимости от числа элементов в добавляемой коллекции.
    // 6. Метод Remove, удаляющий из коллекции указанный элемент. Метод должен возвращать true, если удаление прошло успешно и false  в противном случае.
    // При удалении элементов реальная емкость массива не должна уменьшаться.
    // 7. Метод Insert, позволяющий добавить элемент в произвольную позицию массива (обратите внимание, может потребоваться расширить массив).  
    // Метод должен возвращать true, если добавление прошло успешно и false в противном случае. При выходе за границу массива должно генерироваться исключение ArgumentOutOfRangeException.
    // 8. Свойство Length – получение длины массива.
    // 9. Свойство Capacity – получение реальной длины массива.
    // 10. Методы, реализующие интерфейсы IEnumerable и IEnumerator.
    // 11. Индексатор, позволяющий работать с элементом с указанным номером. При выходе за границу массива должно генерироваться исключение ArgumentOutOfRangeException.

    /// <summary>
    /// Main Task02 class.
    /// </summary>
    public static class Program
    {
        /// <summary>
        /// Main Task02 method.
        /// </summary>
        public static void Main()
        {
            var array = new DynamicArray<int>(8);
            array.Add(1);
            array.Add(2);
            array.Add(3);
            array.Add(4);
            array.Add(5);
            var list = new List<int>();
            list.Add(1);
            list.Add(2);
            list.Add(3);
            list.Add(4);
            list.Add(5);
            array.AddRange(list);
            array.Insert(13, 6);
            array.Insert(14, 6);
            array.Insert(15, 6);

            foreach (int elem in array.Value)
            {
                Console.Write("{0} ",elem);
            }

            Console.WriteLine();
            Console.WriteLine(array.Length);
            Console.WriteLine(array.Capacity);

			//todo pn Сonsole.ReadKey();
        }
    }
}
